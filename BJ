import java.io.*;
import java.util.Random;
import java.util.Scanner;
import java.util.ArrayList;
import java.lang.String;

public class blackJack {
    int rc = 52;
    Random r = new Random();//this will be used to pick random cards from the deck mentioned above
    ArrayList p1 = new ArrayList();//this is the player's hand
    ArrayList dealer = new ArrayList();//this is the dealer's hand
    static final ArrayList deck = new ArrayList();
    Scanner s = new Scanner(System.in);


    public ArrayList setDeck (ArrayList deck) {
        //sets deck of all non numerical cards
        deck.add("Ace of Clubs");
        deck.add("Ace of Spades");
        deck.add("Ace of Hearts");
        deck.add("Ace of Diamonds");
        deck.add("J of Clubs");
        deck.add("J of Spades");
        deck.add("J of Hearts");
        deck.add("J of Diamonds");
        deck.add("Q of Clubs");
        deck.add("Q of Spades");
        deck.add("Q of Hearts");
        deck.add("Q of Diamonds");
        deck.add("K of Clubs");
        deck.add("K of Spades");
        deck.add("K of Diamond");
        deck.add("K of Hearts");
        //sets deck of all numerical cards
        int dc = 2;
        for (int i = 16; i <= 24; i++) {
            deck.add(dc + " of Clubs");
            dc++;
        }
        dc = 2;
        for (int i = 25; i <= 33; i++) {
            deck.add(dc + " of Spades");
            dc++;
        }
        dc = 2;
        for (int i = 34; i <= 42; i++) {
            deck.add(dc + " of Hearts");
            dc++;
        }
        dc = 2;
        for (int i = 43; i <= 51; i++) {
            deck.add(dc + " of Diamonds");
            dc++;
        }
        return deck;
    }

    public void deal (ArrayList p1) {
        int c1 = r.nextInt(rc);
        rc--;
        int c2 = r.nextInt(rc);
        rc--;
        int c3 = r.nextInt(rc);
        rc--;
        int c4 = r.nextInt(rc);
        rc--;
        p1.add (deck.get(c1));
        p1.add (deck.get(c2));
        dealer.add (deck.get(c3));
        dealer.add (deck.get(c4));
        deck.remove(c1);
        deck.remove(c2);
        deck.remove(c3);
        deck.remove(c4);
        System.out.println("The dealer's cards: " + dealer.get(0));
        System.out.println("Your hand: "+ p1.get(0) + ", " + p1.get(1));
    }

    public String dealer(){
        int dealerTotal = 0;
        for (int i = 0;i < p1.size(); i++ ){
            if(p1.subList(i,i).contains("K")){
                dealerTotal = dealerTotal + 10;
            }else if(p1.subList(i,i).contains("Q")){
                dealerTotal = dealerTotal + 10;
            }else if(p1.subList(i,i).contains("J")){
                dealerTotal = dealerTotal + 10;
            }else if(p1.subList(i,i).contains("10")){
                dealerTotal = dealerTotal + 10;
            }else if(p1.subList(i,i).contains("9")){
                dealerTotal = dealerTotal + 9;
            }else if(p1.subList(i,i).contains("8")){
                dealerTotal = dealerTotal + 8;
            }else if(p1.subList(i,i).contains("7")){
                dealerTotal = dealerTotal + 7;
            }else if(p1.subList(i,i).contains("6")){
                dealerTotal = dealerTotal + 6;
            }else if(p1.subList(i,i).contains("5")){
                dealerTotal = dealerTotal + 5;
            }else if(p1.subList(i,i).contains("4")){
                dealerTotal = dealerTotal + 4;
            }else if(p1.subList(i,i).contains("3")){
                dealerTotal = dealerTotal + 3;
            }else if(p1.subList(i,i).contains("2")){
                dealerTotal = dealerTotal + 2;
            }else if(p1.subList(i,i).contains("Ace")){
                dealerTotal = dealerTotal + 11;
                int dealerTotal2 = dealerTotal + 1;
            }
        }
        String dc;
        if(dealerTotal <= 15){
            int h1 = r.nextInt(rc);
            rc--;
            dealer.add (deck.get(h1));
            deck.remove(h1);
            dc = "The dealer chose to hit";
        }else if(dealerTotal >= 16){
            dc = "The dealer chose to stay";
        }else{
            dc = "There is an error";
        }
        return dc;
    }

    public boolean isBust(){
        int p1Total = 0;

        for (int i = 0;i < p1.size(); i++ ){
            if(p1.subList(i,i).contains("K")){
                p1Total = p1Total + 10;
            }else if(p1.subList(i,i).contains("Q")){
                p1Total = p1Total + 10;
            }else if(p1.subList(i,i).contains("J")){
                p1Total = p1Total + 10;
            }else if(p1.subList(i,i).contains("10")){
                p1Total = p1Total + 10;
            }else if(p1.subList(i,i).contains("9")){
                p1Total = p1Total + 9;
            }else if(p1.subList(i,i).contains("8")){
                p1Total = p1Total + 8;
            }else if(p1.subList(i,i).contains("7")){
                p1Total = p1Total + 7;
            }else if(p1.subList(i,i).contains("6")){
                p1Total = p1Total + 6;
            }else if(p1.subList(i,i).contains("5")){
                p1Total = p1Total + 5;
            }else if(p1.subList(i,i).contains("4")){
                p1Total = p1Total + 4;
            }else if(p1.subList(i,i).contains("3")){
                p1Total = p1Total + 3;
            }else if(p1.subList(i,i).contains("2")){
                p1Total = p1Total + 2;
            }else if(p1.subList(i,i).contains("Ace")){
                p1Total = p1Total + 11;
                int p1Total2 = p1Total + 1;
            }
        }
        if (p1Total > 21) {
            System.out.println("You Suk. You Ded. You Bad.");
            return true;
        }else{
            return false;
        }
    }

    public boolean isBJ(){
        int p1Total = 0;
        int p1Total2 = 0;
        boolean isBJ;
        int ac = 0;

        for (int i = 0;i < p1.size(); i++ ){
            if(p1.subList(i,i).contains("K")){
                p1Total = p1Total + 10;
            }else if(p1.subList(i,i).contains("Q")){
                p1Total = p1Total + 10;
            }else if(p1.subList(i,i).contains("J")){
                p1Total = p1Total + 10;
            }else if(p1.subList(i,i).contains("10")){
                p1Total = p1Total + 10;
            }else if(p1.subList(i,i).contains("9")){
                p1Total = p1Total + 9;
            }else if(p1.subList(i,i).contains("8")){
                p1Total = p1Total + 8;
            }else if(p1.subList(i,i).contains("7")){
                p1Total = p1Total + 7;
            }else if(p1.subList(i,i).contains("6")){
                p1Total = p1Total + 6;
            }else if(p1.subList(i,i).contains("5")){
                p1Total = p1Total + 5;
            }else if(p1.subList(i,i).contains("4")){
                p1Total = p1Total + 4;
            }else if(p1.subList(i,i).contains("3")){
                p1Total = p1Total + 3;
            }else if(p1.subList(i,i).contains("2")){
                p1Total = p1Total + 2;
            }else if(p1.subList(i,i).contains("Ace")){
                p1Total = p1Total + 11;
                p1Total2 = p1Total + 1;
                if (p1Total > 21 || p1Total > p1Total2){
                    ac = p1Total;
                }else if(p1Total < p1Total2){
                    ac = p1Total2;
                }
            }
        }
        if(ac == 21 || p1Total == 21){
            isBJ = true;
        }else{
            isBJ = false;
        }
        return isBJ;
    }


    public void hitStay (){
        System.out.println("hit (h) or stay (s)");
        String hs = s.nextLine();
        if(hs.equalsIgnoreCase("h")){
            //add a card
            //show hand
            int h1 = r.nextInt(rc);
            rc--;
            p1.add (deck.get(h1));
            deck.remove(h1);
            System.out.println(p1);
        }else if(hs.equalsIgnoreCase("s")){
            //show hand
            System.out.print("Your hand: ");
            for(int i = 0; i<p1.size(); i++){
                System.out.print(p1.get(i) + ",");
            }
        }else{
            System.out.println("Invalid input.");
        }
    }


    public static void main(String[] args) {
        //creates deck
        blackJack a = new blackJack();
        a.setDeck(deck);
        a.deal(deck);
        a.isBJ();
        a.hitStay();
        a.isBust();
        a.isBJ();
    }
}
